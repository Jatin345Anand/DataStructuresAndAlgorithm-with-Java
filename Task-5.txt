Q1. 

Given a string expression, check if brackets present in the expression are balanced or not. Brackets are balanced if the bracket which opens last, closes first.
You need to return true if it is balanced, false otherwise.

Sample Input 1 :
{ a + (e + f) }
Sample Output 1 :
true
Sample Input 2 :
{ a + [ b } ]
Sample Output 2 :
false


Q2. 

Reverse a given Stack with the help of another empty stack. Two stacks will be given. Out of which first contains some integers and second one is empty. You need to reverse the first one using second stack. Change in the given first stack itself.

Input :
Line 1 : Size of Stack
Line 2 : Stack elements

Sample Input 1 :
4 
1 2 3 4     (4 is at top)

Sample Output 1 :
1 2 3 4    (1 is at top)

Q3.

Given a queue of integers, reverse it without help of any explicit stack or queue. You need to change in the given queue itself.

Input format :

Line 1 : Size of Queue
Line 2 : Queue elements (separated by space)

Output format :

Queue elements

Sample Input :
4 
1 2 3 4     (1 is at front)

Sample Output :
4 3 2 1    (4 is at front)

Q4.

Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.

Return -1 if the given expression can't be balanced.

Sample Input 1 :
{{{

Sample Output 1 :
-1

Sample Input 2 :
{{{{}}

Sample Output 2 :
1

Q5. Search and solve Stock span problem.

Solve these problems as much as possible:-

https://www.hackerearth.com/practice/data-structures/stacks/basics-of-stacks/practice-problems/